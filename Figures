library(purrr)

# Define color palette
colors <- c("Combined" = "#0000ff", "Clinical factors" = "#ff8000", "Inflammatory Biomarkers" = "#00c000", "QST" = "#ff0000", "Psychological factors" = "#ad07e3",
            "Gradient Boost" = "#0000ff", "KNN" = "#ff8000", "KNN RF" = "#00c000", "Logistic" = "#ff0000", "Naive Bayes" = "#ad07e3")


summary_of_auc <- read_excel("summary_of_auc.xlsx")
summary_of_auc$Model <- factor(summary_of_auc$Model, levels = c("Gradient Boost","KNN", "KNN RF", "Logistic", "Naive Bayes"))
summary_of_auc$Domain <- factor(summary_of_auc$Domain, levels = c("Combined", "Clinical factors", "Inflammatory Biomarkers", "QST", "Psychological factors"))

# Create a new categorical variable for the x-axis
summary_of_auc <- summary_of_auc %>%
  mutate(x_axis_group = interaction(Model, Domain, sep = " "))

# ggplot
figure2 <- ggplot(summary_of_auc, aes(x = Place, y = AUC, group=Domain,fill = Model, colour = Model)) +
  geom_bar(position = position_dodge(width = 0.9),stat = "identity", width = 0.7, color = "black", linewidth = 0.7) +
  scale_fill_manual(values = colors) +
  scale_colour_manual(values = colors) +
  theme_classic(base_size = 16) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold"),
    axis.text.y = element_text(face = "bold"),
    axis.title.y = element_text(face = "bold"),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    legend.position = "bottom",
    legend.text = element_text(face = "bold")
  ) +
  ylab("AUC") +
  #scale_x_discrete(labels = rep(c("Combined \n Clinical factors \n Inflammatory Biomarkers \n QST \n Psychological factors"), 5))+
  #scale_x_discrete(labels = rep(c("Combined", "Clinical factors", "Inflammatory Biomarkers", "QST", "Psychological factors"), 6))+
  scale_x_continuous(breaks = 1:30, 
                     labels = rep(c("Combined", "Clinical factors", "Inflammatory Biomarkers", "QST", "Psychological factors",""), 5))+
  scale_y_continuous(expand=c(0,0),limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1))
figure2



roc_groups <- list(
  "Combined" = list(
    "KNN" = roc_knn_all,
    "KNN RF" = roc_knn_rf_all,
    "Logistic" = roc_log_all,
    "Gradient Boost" = roc_gbm_all,
    "Naive Bayes" = roc_bayes_all
  ),
  "Inflammatory Biomarkers" = list(
    "KNN" = roc_knn_prot,
    "KNN RF" = roc_knn_rf_prot,
    "Logistic" = roc_log_prot,
    "Gradient Boost" = roc_gbm_prot,
    "Naive Bayes" = roc_bayes_prot
  ),
  "Psychological factors" = list(
    "KNN" = roc_knn_prom,
    "KNN RF" = roc_knn_rf_prom,
    "Logistic" = roc_log_prom,
    "Gradient Boost" = roc_gbm_prom,
    "Naive Bayes" = roc_bayes_prom
  ),
  "Clinical factors" = list(
    "KNN" = roc_knn_clinical,
    "KNN RF" = roc_knn_rf_clinical,
    "Logistic" = roc_log_clinical,
    "Gradient Boost" = roc_gbm_clinical,
    "Naive Bayes" = roc_bayes_clinical
  ),
  "QST" = list(
    "KNN" = roc_knn_qst,
    "KNN RF" = roc_knn_rf_qst,
    "Logistic" = roc_log_qst,
    "Gradient Boost" = roc_gbm_qst,
    "Naive Bayes" = roc_bayes_qst
  )
)

generate_roc_plot <- function(roc_list, group_name) {
  element_names <- names(roc_list)
  
  df_list <- lapply(seq_along(roc_list), function(i) {
    data.frame(
      Specificity = 1 - roc_list[[i]]$specificities,
      Sensitivity = roc_list[[i]]$sensitivities,
      Model = element_names[i]
    )
  })
  
  roc_dataframe <- bind_rows(df_list) %>%
    group_by(Model, Sensitivity) %>%
    slice(c(which.min(Specificity), which.max(Specificity)))
  
  ggplot(roc_dataframe, aes(x = Specificity, y = Sensitivity, colour = Model)) +
    geom_line(linewidth = 0.7) +
    scale_color_manual(values = colors) +
    geom_abline(intercept = 0, slope = 1, colour = "gray") +
    scale_x_continuous(breaks = seq(0, 1, by = 0.2)) +
    scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
    xlab("False Positive Rate") +
    ylab("True Positive Rate") +
    ggtitle(group_name) +
    theme_classic() +
    theme(legend.position = "none")
}

roc_plots <- imap(roc_groups, generate_roc_plot)


#Legend plot

# Create a dummy data frame with the levels you want in the legend
legend_df <- data.frame(
  x = 1:5,
  y = 1:5,
  Model = factor(c("KNN", "KNN RF", "Gradient Boost", "Logistic", "Naive Bayes"))
)

# Create a plot with no geoms except for the legend-producing one
legend_plot <- ggplot(legend_df, aes(x, y, color = Model)) +
  geom_line(linewidth=2) +  # just to trigger legend
  scale_color_manual(values = colors) +
  theme_void() +  # remove axes and grid
  theme(
    legend.position = "inside",
    legend.position.inside = c(0.5, 0.5),
    legend.text = element_text(size=15),
    legend.title = element_text(size=20)
  )

# Display all plots
library(patchwork)
pdf("figure1_barchart.pdf",width = 12, height = 8)
figure2
dev.off()

pdf("roc_plots.pdf",width = 12, height = 8)
(roc_plots[[1]] | roc_plots[[2]] | roc_plots[[3]]) /
  (roc_plots[[4]] | roc_plots[[5]] |legend_plot)
dev.off()

pdf("roc_plots1.pdf",width = 8, height = 9)
(roc_plots[[1]] | roc_plots[[2]]) /
  (roc_plots[[3]] | roc_plots[[4]])/ 
  (roc_plots[[5]] |legend_plot)
dev.off()
